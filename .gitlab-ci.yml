# .gitlab-ci.yml

stages:
  - build_and_push

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

.docker_build_template: &docker_build_definition
  stage: build_and_push
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

# Build Nextcloud image
build-nextcloud:
  <<: *docker_build_definition
  script:
    - echo "Building Nextcloud image..."
    - docker buildx create --use --name multiarch-builder
    - docker buildx build
        --platform linux/amd64,linux/arm64
        --build-arg NEXTCLOUD_VERSION=${NEXTCLOUD_VERSION:-25}
        --build-arg NEXTCLOUD_API_WRAPPER_PORT=${NEXTCLOUD_API_WRAPPER_PORT:-5001}
        --build-arg APACHE_APP_PATH=${APACHE_APP_PATH:-/var/www/html}
        --file devops/apps/nextcloud/builder/Dockerfile
        --tag $CI_REGISTRY_IMAGE/nextcloud:$CI_COMMIT_SHORT_SHA
        --tag $CI_REGISTRY_IMAGE/nextcloud:latest
        --push
        devops/apps/nextcloud
  only:
    - main
    - develop
    - tags

# Build LDAP image
build-ldap:
  <<: *docker_build_definition
  script:
    - echo "Building LDAP image..."
    - docker buildx create --use --name multiarch-builder
    - docker buildx build
        --platform linux/amd64,linux/arm64
        --build-arg LDAP_ORGANISATION=${LDAP_ORGANISATION:-Colmena}
        --build-arg LDAP_DOMAIN=${LDAP_DOMAIN:-colmena.local}
        --file devops/apps/ldap/builder/Dockerfile
        --tag $CI_REGISTRY_IMAGE/ldap:$CI_COMMIT_SHORT_SHA
        --tag $CI_REGISTRY_IMAGE/ldap:latest
        --push
        devops/apps/ldap
  only:
    - main
    - develop
    - tags

# Build Mailcrab image
build-mailcrab:
  <<: *docker_build_definition
  script:
    - echo "Building Mailcrab image..."
    - docker buildx create --use --name multiarch-builder
    - docker buildx build
        --platform linux/amd64,linux/arm64
        --build-arg MAILCRAB_VERSION=latest
        --file devops/apps/mailcrab/builder/Dockerfile
        --tag $CI_REGISTRY_IMAGE/mailcrab:$CI_COMMIT_SHORT_SHA
        --tag $CI_REGISTRY_IMAGE/mailcrab:latest
        --push
        devops/apps/mailcrab
  only:
    - main
    - develop
    - tags

# Create release artifacts
create-release:
  stage: build_and_push
  image: alpine:latest
  script:
    - apk add --no-cache curl jq
    - echo "Creating release artifacts..."
    - |
      cat > release-info.json << EOF
      {
        "version": "$CI_COMMIT_TAG",
        "commit": "$CI_COMMIT_SHA",
        "images": {
          "nextcloud": "$CI_REGISTRY_IMAGE/nextcloud:$CI_COMMIT_SHORT_SHA",
          "ldap": "$CI_REGISTRY_IMAGE/ldap:$CI_COMMIT_SHORT_SHA",
          "mailcrab": "$CI_REGISTRY_IMAGE/mailcrab:$CI_COMMIT_SHORT_SHA"
        },
        "docker_compose": "docker-compose.yml",
        "balena_config": "balena.yml"
      }
      EOF
  artifacts:
    paths:
      - release-info.json
      - docker-compose.yml
      - balena.yml
    expire_in: 1 year
  only:
    - tags
